USE [Alarms]
GO
/****** Object:  Trigger [dbo].[UpdateAlarmRTAfterUpdate0]    Script Date: 11/09/2023 10:24:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TRIGGER [dbo].[UpdateAlarmRTAfterUpdate0]
ON [dbo].[Journal]
AFTER update
AS
BEGIN

   /*  a.NumberNonRead = CASE WHEN (SELECT COUNT(*) FROM Journal j WHERE j.IDAlarm = i.IDAlarm AND j.IsRead = 1)
                     = (SELECT COUNT(*) FROM Journal j WHERE j.IDAlarm = i.IDAlarm) THEN 1 ELSE 0 END,  */


    DECLARE @NumberNonRead INT;
    DECLARE @ExistRTLine INT;
    DECLARE @ActiveAlarm INT;

	SET @NumberNonRead = 0
	SELECT @NumberNonRead = COUNT(*) FROM Journal j  INNER JOIN INSERTED i ON j.IDAlarm = i.IDAlarm WHERE j.IDAlarm = i.IDAlarm AND j.IsRead = 0 

	SELECT @ActiveAlarm = COUNT(*) FROM Journal j  INNER JOIN INSERTED i ON j.IDAlarm = i.IDAlarm   where ( (j.IDAlarm = i.IDAlarm) AND  ((j.Status1 = 1 and j.status0 is null) or (j.IsRead = 0)))

	
	
	SELECT @ExistRTLine = COUNT(*) FROM AlarmRT a  INNER JOIN INSERTED i ON a.IDAlarm = i.IDAlarm WHERE a.IDAlarm = i.IDAlarm  


	if(@NumberNonRead > 0)
		begin
		UPDATE a
		SET  a.NumberNonRead = @NumberNonRead ,        
			a.status = CASE WHEN (i.Status0 IS NULL  and i.Status1 IS NOT NULL ) THEN i.Status1 ELSE i.Status0 END,
			a.ts = GETDATE(),
			a.Station = i.Station
		FROM AlarmRT a
		INNER JOIN INSERTED i ON a.IDAlarm = i.IDAlarm;
		end;

	if (@ExistRTLine = 0)
		begin
			INSERT INTO AlarmRT (IDAlarm,Status, TS, Station, NumberNonRead)
			SELECT i.IDAlarm, 1, GETDATE(), i.Station, 1
			FROM INSERTED i
		end

	


	else if(@ExistRTLine > 0)
		begin

		if(@NumberNonRead = 0)
		begin
			UPDATE a
			SET  a.NumberNonRead = 0      
			FROM AlarmRT a
			INNER JOIN INSERTED i ON a.IDAlarm = i.IDAlarm;
		end ;

		if(@ActiveAlarm = 0 )
		begin
			delete a
			from AlarmRT a
			INNER JOIN INSERTED i ON a.IDAlarm = i.IDAlarm;
		end
		End

END;